name: Build Asuswrt-Modx Next On Ubuntu 22.04

on:
  workflow_dispatch:
    inputs:
      branch:
        type: choice
        description: 'branch to build'
        options:
        #- main
        - 5.2.2
        default:
          5.2.2
      target:
        type: choice
        description: 'target to build'
        options:
        - RT-AX18T
        - RT-CMCCA9
        - RT-CR660X
        - RT-HAR
        - RT-Q20
        - RT-TX1801
        - RT-XG1
        - RT-MIR3G
        - RT-MIR3P
        - RT-GAX1800
        - RT-GAX1800B
        - RT-T6M
        - RT-XG1
        - RT-RX6000
        - RT-KOMIA8
        default:
          RT-RX6000
      applypatch:
        type: boolean
        description: 'apply patch to display lan numbers'
        default: 'true'
      uploadanon:
        type: boolean
        description: 'upload firmware to anonfiles'
        default: 'false'
env:
  REPOSITORY_URL: https://github.com/vb1980/asuswrt-modx-next.git
  TOOLCHAINS_URL: https://github.com/SWRT-dev/mtk-toolchains.git
  WORK_PATH: /home/runner/work
  SRC_PATH: /home/runner/work/asuswrt-modx-next
  TOOLCHAINS_PATH: /home/runner/work/mtk-toolchains
  TIME_ZONE: Asia/Shanghai
  FIRMWARE_PATH: /home/runner/work/firmwares
jobs:
  build:
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - uses: actions/checkout@v4
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        # 更新系统并安装基础编译工具链
        sudo apt update && sudo apt upgrade -y
        sudo apt install -y build-essential git cmake wget gcc-multilib g++-multilib
        # 安装文档生成工具链
        sudo apt install -y asciidoc texinfo docbook-xsl xsltproc intltool binutils-dev
        # 32位兼容库支持（需先添加架构）
        sudo dpkg --add-architecture i386
        sudo apt update
        sudo apt install -y lib32gcc-s1 lib32stdc++6 libc6-dev-i386 lib32z1
        # 压缩工具链
        sudo apt install -y p7zip-full upx lzma-dev liblzma-dev
        # 网络工具
        sudo apt install -y subversion msmtp git-core
        # 调试工具
        sudo apt install -y gdb strace valgrind
        # 其他开发依赖
        sudo apt install -y python3 python2.7 unzip bzip2 gawk gettext flex uglifyjs qemu-utils libssl-dev libglib2.0-dev libelf-dev 
        sudo apt install -y autoconf=2.61 automake autopoint perl m4 libtool bison gengetopt libltdl-dev libtool-bin bison uuid-dev liblzo2-dev dos2unix
        sudo timedatectl set-timezone "$TIME_ZONE"
    - name: Clone source code
      run: |
        git clone -b ${{ github.event.inputs.branch }} --depth=1 $REPOSITORY_URL $SRC_PATH
        git clone --depth=1 $TOOLCHAINS_URL $TOOLCHAINS_PATH
    - name: Apply patch
      if: github.event.inputs.applypatch == 'true'
      run: |
        sudo cp -f patch/fix_lan_numbers.patch $SRC_PATH/fix_lan_numbers.patch
        cd $SRC_PATH
        sudo chmod 777 ./fix_lan_numbers.patch
        git apply -p1 < fix_lan_numbers.patch
    - name: Build
      run: |
        sudo cp -f scripts/build_next.sh $WORK_PATH/build.sh
        cd $WORK_PATH
        sudo chmod 777 ./build.sh
        bash ./build.sh ${{ github.event.inputs.target }}
    - name: Organize firmware files
      run: |
        mkdir -p $FIRMWARE_PATH/
        cd $SRC_PATH/release/src-ra-openwrt-4210/image
        for firmwarefile in $(ls *.trx)
        do sudo mv $firmwarefile $FIRMWARE_PATH/$firmwarefile
        done
        cd $FIRMWARE_PATH
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "STATUS=success" >> $GITHUB_ENV
    - name : Upload packages
      uses: actions/upload-artifact@main
      if: env.STATUS == 'success'
      with:
        name: Asuswrt-Next-packages
        path: ${{ env.FIRMWARE }}
    - name: Upload firmware to anonfiles
      if: env.STATUS == 'success' && github.event.inputs.uploadanon == 'true'
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer anon --no-progress ${FIRMWARE} 2>&1 | tee anonfile.log
        echo "::warning file=anonfile.com::$(cat anonfile.log | grep -o -E "https?://[a-zA-Z0-9\.\/_&=@$%?~#-]*")"
    - name: Remove obsolete firmwares on artifacts
      uses: Bonnie2980/gha-remove-artifacts@master
      if: env.STATUS == 'success'
      with:
        age: '1 day'
        skip-recent: 5
